// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Usage {
  id               Int      @id @default(autoincrement())
  userId           Int      @unique
  apiUsage         Int
  storageUsage     Float
  signupDate       DateTime
  subscriptionDate DateTime @default(now())
  User             User     @relation(fields: [userId], references: [id])
}

model User {
  id               Int                @id @default(autoincrement())
  email            String             @unique
  token            String             @unique @db.VarChar(255)
  membership       String             @default("free") @db.VarChar(255)
  usage            Usage?
  CloudConnections CloudConnections[]
}

model StripeCustomer {
  id            String   @id @unique @db.VarChar(255)
  email         String   @db.VarChar(255)
  paymentStatus String   @default("unpaid") @db.VarChar(255)
  created       Int
  expires       Int
  dateTime      DateTime @default(now())
}

model CloudConnections {
  id                 Int     @id @default(autoincrement())
  userId             Int
  provider           String  @db.VarChar(255)
  bucket             String? @db.VarChar(255) // AWS
  region             String? @db.VarChar(255) // AWS
  accessKeyIV        String? @db.VarChar(255) // AWS
  accessKey          String? @db.VarChar(255) // AWS
  secretKey          String? @db.VarChar(255) // AWS
  secretKeyIV        String? @db.VarChar(255) // AWS
  accountName        String? @db.VarChar(255) // AZURE
  accountAccessKeyIV String? @db.VarChar(255) // AZURE
  accountAccessKey   String? @db.VarChar(255) // AZURE
  clientEmail        String? @db.VarChar(255) // GCP
  privateKey         String? @db.Text // GCP
  privateKeyIV       String? @db.Text // GCP
  User               User    @relation(fields: [userId], references: [id])
}
